{"version":3,"file":"Setup.js","sourceRoot":"","sources":["../../../lib/__tests__/Setup.ts"],"names":[],"mappings":";;AACA,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,4CAA4C;AAC5E,0CAA2D;AAC3D,kCAA+B;AAE/B,QAAQ,CAAC,QAAQ,EAAE;IACjB,QAAQ,CAAC,cAAc,EAAE;QACvB,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,CACJ,WAAG,CAAC;gBACF,KAAK,EAAE,IAAI;gBACX,WAAW,EAAE,uBAAW,CAAC,WAAW;gBACpC,QAAQ,EAAE,CAAC,oBAAQ,CAAC,GAAG,EAAE,oBAAQ,CAAC,OAAO,CAAC;gBAC1C,WAAW,EAAE,IAAI;aAClB,CAAC,CACH,CAAC,UAAU,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,SAAS,EAAE;QAClB,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,CACJ,WAAG,CAAC;gBACF,KAAK,EAAE,IAAI;gBACX,WAAW,EAAE,uBAAW,CAAC,OAAO;gBAChC,QAAQ,EAAE,CAAC,oBAAQ,CAAC,GAAG,EAAE,oBAAQ,CAAC,OAAO,CAAC;gBAC1C,WAAW,EAAE,IAAI;aAClB,CAAC,CACH,CAAC,UAAU,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,EAAE;QACnB,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,CACJ,WAAG,CAAC;gBACF,KAAK,EAAE,IAAI;gBACX,WAAW,EAAE,uBAAW,CAAC,QAAQ;gBACjC,WAAW,EAAE,IAAI;aAClB,CAAC,CACH,CAAC,UAAU,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,YAAY,EAAE;QACrB,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,CACJ,WAAG,CAAC;gBACF,KAAK,EAAE,IAAI;gBACX,WAAW,EAAE,uBAAW,CAAC,UAAU;gBACnC,WAAW,EAAE,IAAI;aAClB,CAAC,CACH,CAAC,UAAU,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,MAAM,EAAE;QACf,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,CACJ,WAAG,CAAC;gBACF,KAAK,EAAE,IAAI;gBACX,WAAW,EAAE,uBAAW,CAAC,IAAI;gBAC7B,WAAW,EAAE,IAAI;aAClB,CAAC,CACH,CAAC,UAAU,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import * as Logging from '../Helper/Logging';\njest.mock('../Helper/Logging'); // We mock logging to not pollute the output\nimport { Args, Integration, Platform } from '../Constants';\nimport { run } from '../Setup';\n\ndescribe('Wizard', () => {\n  describe('React Native', () => {\n    test('run', () => {\n      expect(\n        run({\n          quiet: true,\n          integration: Integration.reactNative,\n          platform: [Platform.ios, Platform.android],\n          skipConnect: true,\n        }),\n      ).toBeTruthy();\n    });\n  });\n\n  describe('Cordova', () => {\n    test('run', () => {\n      expect(\n        run({\n          quiet: true,\n          integration: Integration.cordova,\n          platform: [Platform.ios, Platform.android],\n          skipConnect: true,\n        }),\n      ).toBeTruthy();\n    });\n  });\n\n  describe('Electron', () => {\n    test('run', () => {\n      expect(\n        run({\n          quiet: true,\n          integration: Integration.electron,\n          skipConnect: true,\n        }),\n      ).toBeTruthy();\n    });\n  });\n\n  describe('JavaScript', () => {\n    test('run', () => {\n      expect(\n        run({\n          quiet: true,\n          integration: Integration.javascript,\n          skipConnect: true,\n        }),\n      ).toBeTruthy();\n    });\n  });\n\n  describe('Node', () => {\n    test('run', () => {\n      expect(\n        run({\n          quiet: true,\n          integration: Integration.node,\n          skipConnect: true,\n        }),\n      ).toBeTruthy();\n    });\n  });\n});\n"]}