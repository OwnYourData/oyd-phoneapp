{"version":3,"file":"Constants.js","sourceRoot":"","sources":["../../lib/Constants.ts"],"names":[],"mappings":";;AAAA,wCAAwC;AACxC,IAAY,WAMX;AAND,WAAY,WAAW;IACrB,0CAA2B,CAAA;IAC3B,wCAAyB,CAAA;IACzB,4BAAa,CAAA;IACb,kCAAmB,CAAA;IACnB,oCAAqB,CAAA;AACvB,CAAC,EANW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAMtB;AAED,wCAAwC;AACxC,IAAY,QAGX;AAHD,WAAY,QAAQ;IAClB,uBAAW,CAAA;IACX,+BAAmB,CAAA;AACrB,CAAC,EAHW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAGnB;AAED;IACE,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,QAAgB,IAAK,OAAA,CAAC;QACtD,OAAO,EAAE,IAAI;QACb,IAAI,EAAE,sBAAsB,CAAC,QAAQ,CAAC;QACtC,KAAK,EAAE,QAAQ;KAChB,CAAC,EAJqD,CAIrD,CAAC,CAAC;AACN,CAAC;AAND,gDAMC;AAED,gCAAuC,IAAY;IACjD,QAAQ,IAAI,EAAE;QACZ,KAAK,QAAQ,CAAC,GAAG;YACf,OAAO,KAAK,CAAC;QACf;YACE,OAAO,SAAS,CAAC;KACpB;AACH,CAAC;AAPD,wDAOC;AAED,mCAA0C,IAAY;IACpD,QAAQ,IAAI,EAAE;QACZ,KAAK,WAAW,CAAC,WAAW;YAC1B,OAAO,cAAc,CAAC;QACxB,KAAK,WAAW,CAAC,OAAO;YACtB,OAAO,SAAS,CAAC;QACnB,KAAK,WAAW,CAAC,IAAI;YACnB,OAAO,sBAAsB,CAAC;QAChC,KAAK,WAAW,CAAC,QAAQ;YACvB,OAAO,UAAU,CAAC;QACpB;YACE,OAAO,4BAA4B,CAAC;KACvC;AACH,CAAC;AAbD,8DAaC;AAED;IACE,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,UAAC,IAAY,IAAK,OAAA,CAAC;QACrD,IAAI,EAAE,yBAAyB,CAAC,IAAI,CAAC;QACrC,KAAK,EAAE,IAAI;KACZ,CAAC,EAHoD,CAGpD,CAAC,CAAC;AACN,CAAC;AALD,sDAKC;AAYY,QAAA,WAAW,GAAG,oBAAoB,CAAC","sourcesContent":["/** Key value should be the same here */\nexport enum Integration {\n  reactNative = 'reactNative',\n  javascript = 'javascript',\n  node = 'node',\n  cordova = 'cordova',\n  electron = 'electron',\n}\n\n/** Key value should be the same here */\nexport enum Platform {\n  ios = 'ios',\n  android = 'android',\n}\n\nexport function getPlatformChoices(): any[] {\n  return Object.keys(Platform).map((platform: string) => ({\n    checked: true,\n    name: getPlatformDescription(platform),\n    value: platform,\n  }));\n}\n\nexport function getPlatformDescription(type: string): string {\n  switch (type) {\n    case Platform.ios:\n      return 'iOS';\n    default:\n      return 'Android';\n  }\n}\n\nexport function getIntegrationDescription(type: string): string {\n  switch (type) {\n    case Integration.reactNative:\n      return 'React Native';\n    case Integration.cordova:\n      return 'Cordova';\n    case Integration.node:\n      return 'Generic node project';\n    case Integration.electron:\n      return 'Electron';\n    default:\n      return 'Generic javascript project';\n  }\n}\n\nexport function getIntegrationChoices(): any[] {\n  return Object.keys(Integration).map((type: string) => ({\n    name: getIntegrationDescription(type),\n    value: type,\n  }));\n}\n\nexport interface Args {\n  url: string;\n  debug: boolean;\n  uninstall: boolean;\n  integration: Integration;\n  platform: Platform;\n  skipConnect: boolean;\n  quiet: boolean;\n}\n\nexport const DEFAULT_URL = 'https://sentry.io/';\n"]}